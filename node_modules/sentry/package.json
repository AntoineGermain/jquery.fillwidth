{
  "name": "sentry",
  "version": "0.1.2",
  "author": {
    "name": "Craig Spaeth",
    "email": "craigspaeth@gmail.com",
    "url": "http://craigspaeth.com"
  },
  "description": "Watch files (using a path, wildcards, or a regex) and execute a function or shell command.",
  "keywords": [
    "watch",
    "watchr",
    "guard",
    "wildcards",
    "recursive"
  ],
  "repository": {
    "type": "git",
    "url": "http://github.com/craigspaeth/sentry"
  },
  "dependencies": {
    "coffee-script": "*",
    "underscore": "*",
    "file": "*"
  },
  "devDependencies": {
    "jasmine-node": "*"
  },
  "main": "lib/sentry",
  "scripts": {
    "install": "cake build"
  },
  "readme": "# Sentry\n\nSentry is a simple node tool to watch for file changes (using a path, wildcards, or regexes) and execute a function or shell command. It's like a [watchr](https://github.com/mynyml/watchr) or [guard](https://github.com/guard/guard) for node.\n\n## Installation\n\n    $ npm install sentry\n\n## Example\n\n````coffeescript\nsentry = require 'sentry'\n\n# Watch changes in file.js\nsentry.watch 'file.js', (file) -> console.log \"A change has been made in #{file}\"\n\n# Watch changes on any file ending in .coffee one directory deep\nsentry.watch 'fld/*.coffee', ->\n\n# Watch changes recursively on any files \nsentry.watch 'fld/**/*', ->\n\n# Watch files recursively that match a regex\nsentry.watchRegExp 'fld/', /regex/, ->\n\n# If you pass a string instead of a function it'll execute that child process\nsentry.watch 'file.coffee', 'coffee -c'\n````\n\n## API\n\nSentry comes with two methods `watch` and `watchRegExp`.\n\n### sentry.watch(filePath, [task], callback)\n\nOptionally you may pass a task which will send `(err, stdout, stderr)` as the arguments to the callback\n\n````coffeescript\nsentry.watch 'file.js', 'coffee -c', (err, stdout, stderr) ->\n````\n\nOr simply just a callback and Sentry will pass the filename to the callback\n\n````coffeescript\nsentry.watch 'file.js', (filename) ->\n````\n\nFeel free to use wildcards with extensions\n\n````coffeescript\n\n# Find all files one directory deep\nsentry.watch '/folder/*', ->\n\n# Find all files one directory deep ending in .coffee\nsentry.watch '/folder/*.coffee', ->\n\n# Find all files recursively\nsentry.watch '/folder/**/*', ->\n\n# Find all files recursively ending in .txt\nsentry.watch '/folder/**/*.txt', ->\n````\n\n### sentry.watchRegExp(root, regex, [task], callback)\n\nJust like sentry.watch but instead you must pass a root directory and regular expression to match files against.\n\n````coffeescript\n\n# Find all files in this folder that end in .coffee\nsentry.watchRegExp '', /\\.coffee$/, ->\n\n# Find all files in the adjacent 'test' folder that begin with test and end in .coffee\nsentry.watchRegExp '../tests/', /^test_,.coffee$/, ->\n````\n\n## To run tests\n\nSentry uses [Jasmine-node](https://github.com/mhevery/jasmine-node) for testing. Simply run the jasmine-node command with the coffeescript flag\n\n    jasmine-node spec --coffee",
  "readmeFilename": "README.md",
  "_id": "sentry@0.1.2",
  "dist": {
    "shasum": "fb34947dd5752639abf68949b8fc29dafca65334"
  },
  "_from": "sentry"
}
